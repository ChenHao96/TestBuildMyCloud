spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: ds
        password: 123456
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: ds
        password: 123456
    sharding:
      broadcast-tables: t_item
      binding-tables: t_user,t_user_package
      default-database-strategy:
        inline:
          sharding-column: u_id
          algorithm-expression: ds$->{(u_id / 10000000).longValue() % 2}
      tables:
        t_user:
          actual-data-nodes: ds$->{0..1}.t_user_$->{0..1}
          table-strategy:
            inline:
              sharding-column: u_id
              algorithm-expression: t_user_$->{(u_id / 10000000).longValue() % 2}
          key-generator:
            column: u_id
            type: SNOWFLAKE
        t_user_package:
          actual-data-nodes: ds$->{0..1}.t_user_package_$->{0..1}
          table-strategy:
            inline:
              sharding-column: u_id
              algorithm-expression: t_user_package_$->{(u_id / 10000000).longValue() % 2}
          key-generator:
            column: p_id
            type: SNOWFLAKE